type User {
  id: ID!
  name: String!
  phone: String!
  email: String!
  password: String!
  currentPassword: String!
  createdAt: String
  updatedAt: String
}
input UserInput {
  id: ID
  name: String!
  phone: String!
  email: String!
  password: String!
  currentPassword: String!
}
type Query {
  fetchUserById(id: ID!): User
  fetchUsers: [User]
  checkUserExists(email: String!): Boolean
}
input LoginInput {
  email: String!
  password: String!
}
type AuthenticatedUser {
  id: ID!
  name: String!
  token: String!
  phone: String!
  email: String!
}
type Mutation {
  createUser(input: UserInput!): User
  updateUser(input: UserInput!): User
  validateUser(input: LoginInput): AuthenticatedUser
}
